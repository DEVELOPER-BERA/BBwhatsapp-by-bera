<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>BBWhatsapp - Chat</title>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body { font-family: Arial, sans-serif; margin:0; padding:0; }
    #chat-container { display: flex; height: 100vh; }
    #sidebar { width: 25%; background:#f0f0f0; border-right:1px solid #ccc; padding:10px; overflow-y:auto; }
    #chat { flex: 1; display:flex; flex-direction: column; }
    #chat-header { padding:10px; border-bottom:1px solid #ccc; background:#eee; font-weight:bold; }
    #messages { flex:1; padding:10px; overflow-y:auto; }
    #form { display:flex; border-top:1px solid #ccc; }
    #form input { flex:1; padding:10px; border:none; }
    #form button { padding:10px; border:none; background:#25d366; color:white; cursor:pointer; }
    .msg { margin:5px 0; }
    .system { color:gray; font-style:italic; }
    .me { color:green; }
    .user-item { cursor:pointer; padding:5px; }
    .user-item:hover { background:#ddd; }
  </style>
</head>
<body>
  <div id="chat-container">
    <!-- Sidebar -->
    <div id="sidebar">
      <h3>Users</h3>
      <ul id="users">
        <% if (users && users.length > 0) { %>
          <% users.forEach(function(u){ %>
            <li class="user-item"><%= u %></li>
          <% }) %>
        <% } %>
      </ul>

      <h4>Groups</h4>
      <ul id="groups">
        <% if (groups && groups.length > 0) { %>
          <% groups.forEach(function(g){ %>
            <li><button onclick="joinRoom('<%= g %>')">Join <%= g %></button></li>
          <% }) %>
        <% } else { %>
          <li>No groups available</li>
        <% } %>
      </ul>
    </div>

    <!-- Chat section -->
    <div id="chat">
      <div id="chat-header">Global Chat</div>
      <div id="messages">
        <% if (messages && messages.length > 0) { %>
          <% messages.forEach(function(m){ %>
            <div class="msg <%= m.username === user ? 'me' : '' %>">
              [<%= new Date(m.timestamp).toLocaleTimeString() %>] 
              <strong><%= m.username %>:</strong> <%= m.text %>
            </div>
          <% }) %>
        <% } else { %>
          <p class="system">No messages yet...</p>
        <% } %>
      </div>

      <form id="form">
        <input id="input" autocomplete="off" placeholder="Type a message..."/>
        <button>Send</button>
      </form>
    </div>
  </div>

  <script>
    const socket = io();
    let currentChat = "global"; // default chat target
    let privateTo = null;

    // username comes from server-side
    const username = "<%= user %>";
    socket.emit("join", username);

    // DOM elements
    const form = document.getElementById('form');
    const input = document.getElementById('input');
    const messages = document.getElementById('messages');
    const usersList = document.getElementById('users');
    const chatHeader = document.getElementById('chat-header');

    // Add message
    function addMessage(msg) {
      const item = document.createElement('div');
      item.classList.add('msg');
      if (msg.username === 'System') {
        item.classList.add('system');
      } else if (msg.username === username) {
        item.classList.add('me');
      }
      item.textContent = `[${new Date(msg.timestamp).toLocaleTimeString()}] ${msg.username}: ${msg.text}`;
      messages.appendChild(item);
      messages.scrollTop = messages.scrollHeight;
    }

    // Socket events
    socket.on('message', addMessage);

    socket.on('users', (users) => {
      usersList.innerHTML = '';
      users.forEach(u => {
        if (u !== username) {
          const li = document.createElement('li');
          li.textContent = u;
          li.classList.add('user-item');
          li.onclick = () => {
            currentChat = "private";
            privateTo = u;
            chatHeader.textContent = "Chat with " + u;
            messages.innerHTML = '';
          };
          usersList.appendChild(li);
        }
      });
    });

    socket.on('privateMessage', (msg) => {
      if (msg.from === privateTo || msg.to === username) {
        addMessage({
          username: msg.from,
          text: msg.text,
          timestamp: msg.timestamp
        });
      }
    });

    // Form submit
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      if (input.value) {
        if (currentChat === "global") {
          socket.emit('chatMessage', { username, text: input.value });
        } else if (currentChat === "private" && privateTo) {
          socket.emit('privateMessage', { to: privateTo, text: input.value });
        }
        input.value = '';
      }
    });

    // Join group
    function joinRoom(room) {
      currentChat = "group";
      privateTo = room;
      chatHeader.textContent = "Group: " + room;
      messages.innerHTML = '';
      socket.emit('joinRoom', room);
    }
  </script>
</body>
</html>
